/* eslint-disable */
export default async () => {
    const t = {
        ["./users/entities/user.entity"]: await import("./users/entities/user.entity"),
        ["./mexc/entities/user.entity"]: await import("./mexc/entities/user.entity")
    };
    return { "@nestjs/swagger": { "models": [[import("./users/entities/user.entity"), { "User": { id: { required: true, type: () => String }, ips: { required: true, type: () => [String] }, perms: { required: true, enum: t["./users/entities/user.entity"].UserPermission, isArray: true }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./auth/dto/sign-in.dto"), { "SignInDto": { id: { required: true, type: () => String, maxLength: 100 }, pw: { required: true, type: () => String, minLength: 8, maxLength: 20, pattern: "/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/" } } }], [import("./auth/dto/sign-up.dto"), { "SignUpDto": { id: { required: true, type: () => String, maxLength: 50 }, ips: { required: true, type: () => [String], minItems: 1 }, pw: { required: true, type: () => String, minLength: 8, maxLength: 20, pattern: "/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/" }, perms: { required: true, enum: t["./users/entities/user.entity"].UserPermission, isArray: true } }, "CreateUserDto": { id: { required: true, type: () => String, maxLength: 50 }, ips: { required: true, type: () => [String], minItems: 1 }, perms: { required: true, enum: t["./users/entities/user.entity"].UserPermission, isArray: true } }, "UpdateUserDto": { id: { required: true, type: () => String, maxLength: 50 }, ips: { required: true, type: () => [String], minItems: 1 }, perms: { required: true, enum: t["./users/entities/user.entity"].UserPermission, isArray: true } } }], [import("./mexc/entities/user.entity"), { "User": { id: { required: true, type: () => String }, ips: { required: true, type: () => [String] }, perms: { required: true, enum: t["./mexc/entities/user.entity"].UserPermission, isArray: true }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String } } }], [import("./auth/auth.controller"), { "AuthController": { "signUp": { type: t["./users/entities/user.entity"].User }, "signIn": {}, "changePassword": {}, "passwordReset": { type: t["./users/entities/user.entity"].User }, "signOut": {} } }], [import("./users/users.controller"), { "UsersController": { "signUp": { type: t["./users/entities/user.entity"].User }, "updateUser": { type: t["./users/entities/user.entity"].User }, "getSingle": { type: t["./users/entities/user.entity"].User }, "getMe": { type: t["./users/entities/user.entity"].User }, "deleteUser": {}, "findAll": { type: Object } } }], [import("./mexc/mexc.controller"), { "MexcController": { "createOrder": { type: Object }, "getBalance": { type: Object }, "createBatchOrder": { type: Object }, "deleteOrder": { type: Object } } }]] } };
};